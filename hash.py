import hashlib
import sys

BLOCKSIZE = 65536
reqType = 0
exept = ['--md5', '--sha1', '--sha256', '--all']

for opt in sys.argv:
    if opt == '--md5':
        reqType = 1
    elif opt == '--sha1':
        reqType = 2
    elif opt == '--sha256':
        reqType = 3
    elif opt == '--all':
        reqType = 4

    if reqType == 1 and opt not in exept:
        hasher = hashlib.md5()

        with open(opt, 'rb') as afile:
            buf = afile.read(BLOCKSIZE)
            while len(buf) > 0:
                hasher.update(buf)
                buf = afile.read(BLOCKSIZE)
        print
        print opt + ':'
        print('md5: ' + hasher.hexdigest())
    elif reqType == 2 and opt not in exept:
        hasher = hashlib.sha1()

        with open(opt, 'rb') as afile:
            buf = afile.read(BLOCKSIZE)
            while len(buf) > 0:
                hasher.update(buf)
                buf = afile.read(BLOCKSIZE)
        print
        print opt + ':'
        print('sha1: ' + hasher.hexdigest())
    elif reqType == 3 and opt not in exept:
        hasher = hashlib.sha256()

        with open(opt, 'rb') as afile:
            buf = afile.read(BLOCKSIZE)
            while len(buf) > 0:
                hasher.update(buf)
                buf = afile.read(BLOCKSIZE)
        print
        print opt + ':'
        print('sha256: ' + hasher.hexdigest())
    elif reqType == 4 and opt not in exept:
        #md5
        hasher = hashlib.md5()

        with open(opt, 'rb') as afile:
            buf = afile.read(BLOCKSIZE)
            while len(buf) > 0:
                hasher.update(buf)
                buf = afile.read(BLOCKSIZE)
        print
        print opt + ':'
        print('md5: ' + hasher.hexdigest())
        #sha1
        hasher = hashlib.sha1()

        with open(opt, 'rb') as afile:
            buf = afile.read(BLOCKSIZE)
            while len(buf) > 0:
                hasher.update(buf)
                buf = afile.read(BLOCKSIZE)
        print('sha1: ' + hasher.hexdigest())
        #sha256
        hasher = hashlib.sha256()

        with open(opt, 'rb') as afile:
            buf = afile.read(BLOCKSIZE)
            while len(buf) > 0:
                hasher.update(buf)
                buf = afile.read(BLOCKSIZE)
		print('sha256: ' + hasher.hexdigest())
